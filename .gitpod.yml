## since we're running a github action to publish our docker image on push:
## instead of pointing to our Dockerfile, point to the published image:tag
image: nberlette/gitpod-enhanced:latest

## workspace task definitions. allowed properties for each entry:
  # before:  runs on every start; e.g. terminal configurations
  # init:    runs on prebuilds only; e.g. install dependencies
  # command: runs on every start; e.g. hot reload dev server
  # name:    task name to display in the terminal
tasks:
  - before: | 
      ## experimental support for signing commits/tags with GNUPG
      if [ -n "${GPG_KEY-}" ]; then 
        # import our base64-encoded secret key/keys (dangerous)
        gpg -v --batch --import <(echo "${GPG_KEY-}" | base64 -d) &&
          echo 'pinentry-mode loopback' >> ~/.gnupg/gpg.conf ;
        [ -z "${GPG_TTY-}" ] && export GPG_TTY=$(tty);
        # set default key in gitconfig (optional, convenience)
        [ -n "${GPG_KEY_ID-}" ] && 
          git config --global user.signingkey "${GPG_KEY_ID-}" ;
        # enable signing for commits and tags by default
        git config --global commit.gpgsign "true" ;
        git config --global tag.gpgsign "true" ;
      fi
    init: |
      # prebuilds only; good place to install deps; must terminate
    command: |
      # main command; runs on every start; not required to terminate

gitConfig:
  # controls git-prompt in the integrated terminal
  bash.showColorHints: "true"      # colorizes git info based on branch/upstream status
  bash.showUpstream: "auto"        # false | auto verbose name git svn (accepts > 1)
  bash.showUntrackedFiles: "false" # % added if untracked files are detected
  bash.showStashState: "true"      # $ added if stashed files are detected
  bash.showDirtyState: "true"      # * added if tracked files are modified
  bash.hideIfPwdIgnored: "false"   # hides git prompt if cwd is in .gitignore
  
  # default branch name: "main" instead of "master"
  init.defaultbranch: "main"

  # enable colorized git diffs, status, branch, and logs
  color.ui: "auto"
  color.branch.current: "yellow reverse"
  color.branch.local: "yellow"
  color.branch.remote: "green"
  color.diff.meta: "yellow bold"
  color.diff.frag: "magenta bold"
  color.diff.old: "red bold"
  color.diff.new: "green bold"
  color.status.added: "yellow"
  color.status.changed: "green"
  color.status.untracked: "red"
  
  # handy git aliases
  alias.bail: "reset HEAD --"
  alias.graph: "!git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative"
  alias.amend: "!git log -n 1 --pretty=tformat:%s%n%n%b | git commit -F - --amend"
  alias.setup: "!git init && git add . && git commit -m 'Initial commit.'"
  alias.nb: "!git branch | grep ^* | awk '{ print $2 }'"
  alias.cleanup: "!git ls-files -z --deleted | xargs -0 git rm"
  alias.addnew: "!git cleanup && git add . --all"
  
  # shorthand urls - e.g. gh:nberlette/gitpod-enhanced
  url.https://github.com/.insteadof: "gh:"
  url.https://gist.github.com/.insteadof: "gist:"
  url.https://gitlab.com/.insteadof: "gl:"
  url.https://bitbucket.org/.insteadof: "bb:"

## vscode extensions to pre-install in workspace
vscode:
  extensions:
    - ms-azuretools.vscode-docker
    - eamodio.gitlens
    - esbenp.prettier-vscode
    - dbaeumer.vscode-eslint
    - christian-kohler.npm-intellisense
    - eg2.vscode-npm-script
    - timonwong.shellcheck
    - redhat.vscode-yaml
    - mads-hartmann.bash-ide-vscode
    - gamunu.vscode-yarn

## workspace ports and how to handle them upon opening
ports:
  - port: 3000           # can also be a range, e.g. 3000-3333
    onOpen: open-browser # ignore | notify | open-preview | open-browser
    visibility: private  # public | private
  - port: 5000
    onOpen: notify
    visibility: public

## github prebuilds preferences
github:
  prebuilds:
    # prebuild on master / main branch?
    master: true
    # prebuild for all branches in the repository?
    branches: true
    # add a gitpod label to commits after prebuild?
    addLabel: true
    # add gitpod check?
    addCheck: true

